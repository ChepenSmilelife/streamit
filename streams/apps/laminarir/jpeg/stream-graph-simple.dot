digraph streamit {
subgraph cluster_node1 {
 label="JPEGFilt";
node2 [ label="RandomSource" ]
node3 [ label="Int2Float" ]
node2 -> node3
node4 [ label="Add" ]
node3 -> node4
subgraph cluster_node5 {
 label="DCT_2D";
subgraph cluster_node6 {
 label="helper_Parallel_8_DCT_1D_X";
node7 [ label="roundrobin(8,8,8,8,8,8,8,8)" ]
node8 [ label="roundrobin(8,8,8,8,8,8,8,8)" ]
node9 [ label="DCT_1D" ]
node7 -> node9
node9 -> node8
node10 [ label="DCT_1D" ]
node7 -> node10
node10 -> node8
node11 [ label="DCT_1D" ]
node7 -> node11
node11 -> node8
node12 [ label="DCT_1D" ]
node7 -> node12
node12 -> node8
node13 [ label="DCT_1D" ]
node7 -> node13
node13 -> node8
node14 [ label="DCT_1D" ]
node7 -> node14
node14 -> node8
node15 [ label="DCT_1D" ]
node7 -> node15
node15 -> node8
node16 [ label="DCT_1D" ]
node7 -> node16
node16 -> node8
}
subgraph cluster_node17 {
 label="helper_Parallel_8_DCT_1D_Y";
node18 [ label="roundrobin(1,1,1,1,1,1,1,1)" ]
node19 [ label="roundrobin(1,1,1,1,1,1,1,1)" ]
node20 [ label="DCT_1D" ]
node18 -> node20
node20 -> node19
node21 [ label="DCT_1D" ]
node18 -> node21
node21 -> node19
node22 [ label="DCT_1D" ]
node18 -> node22
node22 -> node19
node23 [ label="DCT_1D" ]
node18 -> node23
node23 -> node19
node24 [ label="DCT_1D" ]
node18 -> node24
node24 -> node19
node25 [ label="DCT_1D" ]
node18 -> node25
node25 -> node19
node26 [ label="DCT_1D" ]
node18 -> node26
node26 -> node19
node27 [ label="DCT_1D" ]
node18 -> node27
node27 -> node19
}
node8 -> node18
}
node4 -> node7
subgraph cluster_node28 {
 label="staticExampleLuminanceQauntization";
node29 [ label="staticQuantization" ]
}
node19 -> node29
subgraph cluster_node30 {
 label="BlockDCDifferenceEncoder";
node31 [ label="roundrobin(1,63)" ]
node32 [ label="roundrobin(1,63)" ]
node33 [ label="IntegerDifferenceEncoder" ]
node31 -> node33
node33 -> node32
node34 [ label="Identity" ]
node31 -> node34
node34 -> node32
}
node29 -> node31
node35 [ label="ZigZagOrdering" ]
node32 -> node35
node36 [ label="ZigZagUnordering" ]
node35 -> node36
subgraph cluster_node37 {
 label="BlockDCDifferenceDecoder";
node38 [ label="roundrobin(1,63)" ]
node39 [ label="roundrobin(1,63)" ]
node40 [ label="IntegerDifferenceDecoder" ]
node38 -> node40
node40 -> node39
node41 [ label="Identity" ]
node38 -> node41
node41 -> node39
}
node36 -> node38
subgraph cluster_node42 {
 label="staticExampleLuminanceDeQauntization";
node43 [ label="staticDeQuantization" ]
}
node39 -> node43
subgraph cluster_node44 {
 label="iDCT_2D";
subgraph cluster_node45 {
 label="helper_Parallel_8_iDCT_1D_X";
node46 [ label="roundrobin(8,8,8,8,8,8,8,8)" ]
node47 [ label="roundrobin(8,8,8,8,8,8,8,8)" ]
node48 [ label="iDCT_1D" ]
node46 -> node48
node48 -> node47
node49 [ label="iDCT_1D" ]
node46 -> node49
node49 -> node47
node50 [ label="iDCT_1D" ]
node46 -> node50
node50 -> node47
node51 [ label="iDCT_1D" ]
node46 -> node51
node51 -> node47
node52 [ label="iDCT_1D" ]
node46 -> node52
node52 -> node47
node53 [ label="iDCT_1D" ]
node46 -> node53
node53 -> node47
node54 [ label="iDCT_1D" ]
node46 -> node54
node54 -> node47
node55 [ label="iDCT_1D" ]
node46 -> node55
node55 -> node47
}
subgraph cluster_node56 {
 label="helper_Parallel_8_iDCT_1D_Y";
node57 [ label="roundrobin(1,1,1,1,1,1,1,1)" ]
node58 [ label="roundrobin(1,1,1,1,1,1,1,1)" ]
node59 [ label="iDCT_1D" ]
node57 -> node59
node59 -> node58
node60 [ label="iDCT_1D" ]
node57 -> node60
node60 -> node58
node61 [ label="iDCT_1D" ]
node57 -> node61
node61 -> node58
node62 [ label="iDCT_1D" ]
node57 -> node62
node62 -> node58
node63 [ label="iDCT_1D" ]
node57 -> node63
node63 -> node58
node64 [ label="iDCT_1D" ]
node57 -> node64
node64 -> node58
node65 [ label="iDCT_1D" ]
node57 -> node65
node65 -> node58
node66 [ label="iDCT_1D" ]
node57 -> node66
node66 -> node58
}
node47 -> node57
}
node43 -> node46
node67 [ label="Add" ]
node58 -> node67
node68 [ label="Float2Int" ]
node67 -> node68
node69 [ label="Display8BitIntBlock" ]
node68 -> node69
}
}
